// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentSystemAPI.Data;

#nullable disable

namespace StudentSystemAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240807085929_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentSystemAPI.Models.Guru", b =>
                {
                    b.Property<int>("GuruId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuruId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MataKuliah")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuruId");

                    b.ToTable("Gurus");
                });

            modelBuilder.Entity("StudentSystemAPI.Models.Kehadiran", b =>
                {
                    b.Property<int>("KehadiranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KehadiranId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuruId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("KehadiranId");

                    b.HasIndex("GuruId");

                    b.HasIndex("StudentId");

                    b.ToTable("Kehadirans");
                });

            modelBuilder.Entity("StudentSystemAPI.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Kelas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NilaiRataRata")
                        .HasColumnType("float");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentSystemAPI.Models.Kehadiran", b =>
                {
                    b.HasOne("StudentSystemAPI.Models.Guru", "Guru")
                        .WithMany("Kehadirans")
                        .HasForeignKey("GuruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentSystemAPI.Models.Student", "Student")
                        .WithMany("Kehadirans")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guru");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentSystemAPI.Models.Guru", b =>
                {
                    b.Navigation("Kehadirans");
                });

            modelBuilder.Entity("StudentSystemAPI.Models.Student", b =>
                {
                    b.Navigation("Kehadirans");
                });
#pragma warning restore 612, 618
        }
    }
}
